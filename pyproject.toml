[tool.poetry]
name = "crit-lines"
version = "0.1.0"
description = "Analyze criterium racing footage to calculate optimal racing lines using telemetry data"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{include = "crit_lines", from = "src"}]

[tool.poetry.dependencies]
python = "^3.9"
opencv-python = "^4.8.0"
numpy = "^1.24.0"
pandas = "^2.0.0"
scipy = "^1.10.0"
fastapi = "^0.100.0"
uvicorn = "^0.23.0"
sqlalchemy = "^2.0.0"
alembic = "^1.11.0"
psycopg2-binary = "^2.9.0"
redis = "^4.6.0"
celery = "^5.3.0"
pydantic = "^2.0.0"
pydantic-settings = "^2.0.0"
requests = "^2.31.0"
plotly = "^5.15.0"
matplotlib = "^3.7.0"
ultralytics = "^8.0.0"
python-multipart = "^0.0.6"
python-dotenv = "^1.0.0"
gpxpy = "^1.5.0"
haversine = "^2.8.0"
click = "^8.1.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
pytest-asyncio = "^0.21.0"
black = "^23.7.0"
isort = "^5.12.0"
flake8 = "^6.0.0"
mypy = "^1.5.0"
pre-commit = "^3.3.0"
httpx = "^0.24.0"

[tool.poetry.scripts]
crit-lines = "crit_lines.cli:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["crit_lines"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "cv2.*",
    "ultralytics.*",
    "plotly.*",
    "redis.*",
    "celery.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --cov=src/crit_lines --cov-report=term-missing --cov-report=html"
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src/crit_lines"]
omit = ["*/tests/*", "*/venv/*", "*/__pycache__/*"]